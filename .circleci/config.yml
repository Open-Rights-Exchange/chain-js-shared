# version of circleci config to use
version: 2.1

# orbs to use for the project
# information: https://circleci.com/orbs/
orbs:
  node: circleci/node@5.0.0

executors:
  node-executor:
    docker:
      - image: node:16.13.2

# jobs that this workflow will run
jobs:
  setup:
    # directory commands will run from by default
    # usually set to organization/repo
    working_directory: ~/Open-Rights-Exchange/chain-js-shared
    shell: /bin/bash --login -e
    executor: node-executor
    steps:
      # checkout the code. Because the default working_directory is the name of the repo 
      # we need to go up a directory thus the `path: ".."`
      - checkout
      # call `yarn install`
      - node/install-packages:
          pkg-manager: yarn
      # call the linter
      - run: yarn run lint
      # save the installed modules and configured repo for the following steps
      - persist_to_workspace:
          root: ~/Open-Rights-Exchange
          paths:
            - chain-js-shared

  # job to run the tests
  # test:
  #   # directory commands will run from by default
  #   # usually set to organization/repo
  #   working_directory: ~/Open-Rights-Exchange/chain-js-shared
  #   shell: /bin/bash --login -e
  #   executor: node-executor
  #   steps:
  #     - attach_workspace:
  #         at: ~/Open-Rights-Exchange
  #     - run: yarn run test

  deploy:
    # directory commands will run from by default
    # usually set to organization/repo
    working_directory: ~/Open-Rights-Exchange/chain-js-shared
    shell: /bin/bash --login -e
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/Open-Rights-Exchange
      # get npmrc token
      - run: echo $NPMRC | base64 -d > ~/.npmrc
      - run: yarn run build
      - run: yarn publish --no-git-tag-version

# define the jobs to run
workflows:
  build_and_test:
    jobs:
      - setup
      # - test:
      #     requires:
      #       - setup
      - deploy:
          requires:
            - setup
          # only run deploy step on tags
          context:
            - global-env
          filters:
            # ignore any commit on any branch by default
            branches:
              only: 
                - master